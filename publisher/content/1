	<p>没有需求，神马都浮云了，所以呢，让我们从需求说起。<br>
假设，网页上有如下所示的一段html代码：</p>

<div class="wp_syntax"><div class="code"><pre class="html" style="font-family:monospace;">&lt;div id="second"&gt;
	&lt;div id="first"&gt;
	&lt;/div&gt;
&lt;/div&gt;</pre></div></div>

<p>形象的表示成如下图所示的结构：<br>
<img src="http://botobe.com/wp-content/uploads/2011/10/111.png" alt="DOM结构"><br>
假设存在了两个方法：</p>

<div class="wp_syntax"><div class="code"><pre class="javascript" style="font-family:monospace;"><span style="color: #003366; font-weight: bold;">function</span> evt_1<span style="color: #009900;">(</span><span style="color: #009900;">)</span> <span style="color: #009900;">{</span>
    <span style="color: #000066;">alert</span><span style="color: #009900;">(</span><span style="color: #3366CC;">'I am first !'</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span>
<span style="color: #009900;">}</span>
<span style="color: #003366; font-weight: bold;">function</span> evt_2<span style="color: #009900;">(</span><span style="color: #009900;">)</span> <span style="color: #009900;">{</span>
    <span style="color: #000066;">alert</span><span style="color: #009900;">(</span><span style="color: #3366CC;">'I am second !'</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span>
<span style="color: #009900;">}</span></pre></div></div>

<p>可以有三种方式，让我们把这两个方法分别绑定到first和second这两个元素上去<br>
1. 行内事件添加（比较简单，直接在html结构中加入onclick。遵循Web应用中行为，样式和结构分离的原则，不推荐使用这种方式）<br>
2. 传统事件模型</p>

<div class="wp_syntax"><div class="code"><pre class="javascript" style="font-family:monospace;"><span style="color: #003366; font-weight: bold;">function</span> ID<span style="color: #009900;">(</span>id<span style="color: #009900;">)</span> <span style="color: #009900;">{</span>
	<span style="color: #000066; font-weight: bold;">return</span> document.<span style="color: #660066;">getElementById</span><span style="color: #009900;">(</span>id<span style="color: #009900;">)</span><span style="color: #339933;">;</span>
<span style="color: #009900;">}</span>
<span style="color: #003366; font-weight: bold;">var</span> first  <span style="color: #339933;">=</span> ID<span style="color: #009900;">(</span><span style="color: #3366CC;">'first'</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span>
<span style="color: #003366; font-weight: bold;">var</span> second <span style="color: #339933;">=</span> ID<span style="color: #009900;">(</span><span style="color: #3366CC;">'second'</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span>
first.<span style="color: #660066;">onclick</span>  <span style="color: #339933;">=</span> evt_1<span style="color: #339933;">;</span>
second.<span style="color: #660066;">onclick</span> <span style="color: #339933;">=</span> evt_2<span style="color: #339933;">;</span></pre></div></div>

<p>3. w3c模型，或者微软模型</p>

<div class="wp_syntax"><div class="code"><pre class="javascript" style="font-family:monospace;"><span style="color: #003366; font-weight: bold;">function</span> ID<span style="color: #009900;">(</span>id<span style="color: #009900;">)</span> <span style="color: #009900;">{</span>
	<span style="color: #000066; font-weight: bold;">return</span> document.<span style="color: #660066;">getElementById</span><span style="color: #009900;">(</span>id<span style="color: #009900;">)</span><span style="color: #339933;">;</span>
<span style="color: #009900;">}</span>
<span style="color: #003366; font-weight: bold;">var</span> first  <span style="color: #339933;">=</span> ID<span style="color: #009900;">(</span><span style="color: #3366CC;">'first'</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span>
<span style="color: #003366; font-weight: bold;">var</span> second <span style="color: #339933;">=</span> ID<span style="color: #009900;">(</span><span style="color: #3366CC;">'second'</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #006600; font-style: italic;">// W3C模型</span>
first.<span style="color: #660066;">addEventListener</span><span style="color: #009900;">(</span><span style="color: #3366CC;">'click'</span><span style="color: #339933;">,</span> evt_1<span style="color: #009900;">)</span><span style="color: #339933;">;</span>
second.<span style="color: #660066;">addEventListener</span><span style="color: #009900;">(</span><span style="color: #3366CC;">'click'</span><span style="color: #339933;">,</span> evt_2<span style="color: #009900;">)</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #006600; font-style: italic;">// 微软模型</span>
<span style="color: #006600; font-style: italic;">// first.attachEvent('onclick', evt_1);</span>
<span style="color: #006600; font-style: italic;">// second.attachEvent('onclick', evt_2);</span></pre></div></div>

<p>ok, 点击first元素，问题出现了！<br>
开发浏览器的聪明的攻城师们也无法预料到这样的一个哲学问题：<br>
<strong>用户的意图究竟是什么？</strong></p>
<p>a. 是想先触发first上的点击事件，然后再触发second上的点击事件？<br>
b. 是想触发first上的点击事件，而不想触发second上的点击事件？<br>
c. 是想触发second上的点击事件，而不想触发first上的点击事件？<br>
d. 或者是先触发second上的点击事件，再去触发first上的点击事件？</p>
<p>这个就涉及到了javascript事件的冒泡和捕获。<br>
当用户点击了一下页面上的dom元素，假使我们给这个元素起一个代号叫做“d”，这个事件的信息中就包含了这次点击的位置，左键或是右键，单击或是双击等等。<br>
事件的信号会先从document元素开始向d元素进行“游历”，这个过程就叫做事件的捕获过程。<br>
当这个事件的信号游历至d元素后，这个信号会按照原路返回至document元素，而这样的一个过程就叫做事件的冒泡。<br>
具体的过程如下图中所示：<br>
<img src="http://botobe.com/wp-content/uploads/2011/11/test.png" alt="冒泡和捕获"><br>
浏览器的行为是不可控的。<br>
我们能做的操作是，给d元素添加相应操作的事件。用上面的点击例子来说，如果d元素就是id=“first”的元素，我可以给他添加一个onclick的事件（可参考上面添加事件的例子）。针对了这个click的事件，触发的首要条件自然是一次点击。还有就是，这是针对冒泡的过程触发呢，还是针对捕获的过程触发？<br>
遗憾的是微软和传统的模型都没有给出这样的解决方案，w3c的事件模型则给出了这样的解决方案。<br>
上面代码中的：</p>

<div class="wp_syntax"><div class="code"><pre class="javascript" style="font-family:monospace;">first.<span style="color: #660066;">addEventListener</span><span style="color: #009900;">(</span><span style="color: #3366CC;">'click'</span><span style="color: #339933;">,</span> evt_1<span style="color: #009900;">)</span><span style="color: #339933;">;</span>
second.<span style="color: #660066;">addEventListener</span><span style="color: #009900;">(</span><span style="color: #3366CC;">'click'</span><span style="color: #339933;">,</span> evt_2<span style="color: #009900;">)</span><span style="color: #339933;">;</span></pre></div></div>

<p>addEventListener，还有第三个参数，是一个布尔值。如果为true则表示是为捕获的过程设置的，反之则表示为冒泡的过程设置的。默认的情况下这个值为false。<br>
有兴趣的朋友可以试一试下面的两种情况：</p>

<div class="wp_syntax"><div class="code"><pre class="javascript" style="font-family:monospace;"><span style="color: #006600; font-style: italic;">// 情况一</span>
first.<span style="color: #660066;">addEventListener</span><span style="color: #009900;">(</span><span style="color: #3366CC;">'click'</span><span style="color: #339933;">,</span> evt_1<span style="color: #339933;">,</span> <span style="color: #003366; font-weight: bold;">false</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span>
second.<span style="color: #660066;">addEventListener</span><span style="color: #009900;">(</span><span style="color: #3366CC;">'click'</span><span style="color: #339933;">,</span> evt_2<span style="color: #339933;">,</span> <span style="color: #003366; font-weight: bold;">false</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #006600; font-style: italic;">// 情况二</span>
first.<span style="color: #660066;">addEventListener</span><span style="color: #009900;">(</span><span style="color: #3366CC;">'click'</span><span style="color: #339933;">,</span> evt_1<span style="color: #339933;">,</span> <span style="color: #003366; font-weight: bold;">false</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span>
second.<span style="color: #660066;">addEventListener</span><span style="color: #009900;">(</span><span style="color: #3366CC;">'click'</span><span style="color: #339933;">,</span> evt_2<span style="color: #339933;">,</span> <span style="color: #003366; font-weight: bold;">true</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span></pre></div></div>

<p>这样就可以解释用户意图中的a和d两种情况了。<br>
b和c两种情况，会在<a href="http://botobe.com/?p=529">javascript的事件模型（二）</a>中解释。</p>
	
